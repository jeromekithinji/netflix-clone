{"ast":null,"code":"var _jsxFileName = \"/Users/jeromekithinji/Development/netflix-clone/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Row = ({\n  title,\n  fetchUrl\n}) => {\n  _s();\n  const [data, setData] = useState({});\n  const [movies, setMovies] = useState([]);\n  const initalizeMovies = () => {\n    // const apiData = data.results;\n    // console.log(\"Movies\", movies); // Log movies after it's initialized\n  };\n  const fetchData = async () => {\n    console.log(\"Fetching data\");\n    fetch(`https://api.themoviedb.org/3${fetchUrl}`).then(response => response.json()).then(jsonResponse => setData(jsonResponse)).catch(err => console.log(err));\n    setMovies(data.results);\n    console.log(\"Movies\", movies); // Log movies after it's initialized\n  };\n\n  useEffect(() => {\n    fetchData();\n    // console.log(\"Movies\", movies); // Don't log movies here\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Row, \"7/Y7fX0N77mbwF+H3DC1DQiB7Mw=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Row","title","fetchUrl","_s","data","setData","movies","setMovies","initalizeMovies","fetchData","console","log","fetch","then","response","json","jsonResponse","catch","err","results","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jeromekithinji/Development/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nconst Row = ({ title, fetchUrl }) => {\n    const [data, setData] = useState({});\n    const [movies, setMovies] = useState([]);\n\n    const initalizeMovies = () => {\n        // const apiData = data.results;\n        // console.log(\"Movies\", movies); // Log movies after it's initialized\n    };\n\n    const fetchData = async () => {\n        console.log(\"Fetching data\");\n        fetch(\n            `https://api.themoviedb.org/3${fetchUrl}`\n        )\n        .then((response) => response.json())\n        .then((jsonResponse) => setData(jsonResponse))\n        .catch((err) => console.log(err));\n        setMovies(data.results);\n        console.log(\"Movies\", movies); // Log movies after it's initialized\n    };\n\n    useEffect(() => {\n        fetchData();\n        // console.log(\"Movies\", movies); // Don't log movies here\n    }, []);\n\n    return (\n        <div>\n            <h2>{title}</h2>\n        </div>\n    );\n};\n\nexport default Row;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,GAAG,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMa,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACA;EAAA,CACH;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BC,KAAK,CACA,+BAA8BV,QAAS,EAC5C,CAAC,CACAW,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,YAAY,IAAKX,OAAO,CAACW,YAAY,CAAC,CAAC,CAC7CC,KAAK,CAAEC,GAAG,IAAKR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC,CAAC;IACjCX,SAAS,CAACH,IAAI,CAACe,OAAO,CAAC;IACvBT,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,MAAM,CAAC,CAAC,CAAC;EACnC,CAAC;;EAEDV,SAAS,CAAC,MAAM;IACZa,SAAS,CAAC,CAAC;IACX;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA;IAAAqB,QAAA,eACIrB,OAAA;MAAAqB,QAAA,EAAKnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEd,CAAC;AAACrB,EAAA,CA/BIH,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}