{"ast":null,"code":"var _jsxFileName = \"/Users/jeromekithinji/Development/netflix-clone/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Row = ({\n  title,\n  fetchUrl\n}) => {\n  _s();\n  const [data, setData] = useState({});\n  const [movies, setMovies] = useState([]);\n  const fetchData = async () => {\n    try {\n      console.log(\"Fetching data\");\n      // const response = await fetch(`https://api.themoviedb.org/3${fetchUrl}`);\n      const response = await axios.get(fetchUrl);\n      const jsonResponse = await response.json();\n      setData(jsonResponse);\n      setMovies(jsonResponse.results); // Set movies after data is updated\n      console.log(\"Movies\", jsonResponse.results); // Log movies after it's initialized\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Row, \"7/Y7fX0N77mbwF+H3DC1DQiB7Mw=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Row","title","fetchUrl","_s","data","setData","movies","setMovies","fetchData","console","log","response","get","jsonResponse","json","results","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jeromekithinji/Development/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Row = ({ title, fetchUrl }) => {\n    const [data, setData] = useState({});\n    const [movies, setMovies] = useState([]);\n\n    const fetchData = async () => {\n        try {\n            console.log(\"Fetching data\");\n            // const response = await fetch(`https://api.themoviedb.org/3${fetchUrl}`);\n            const response = await axios.get(fetchUrl);\n            const jsonResponse = await response.json();\n            setData(jsonResponse);\n            setMovies(jsonResponse.results); // Set movies after data is updated\n            console.log(\"Movies\", jsonResponse.results); // Log movies after it's initialized\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <h2>{title}</h2>\n        </div>\n    );\n};\n\nexport default Row;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAACV,QAAQ,CAAC;MAC1C,MAAMW,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC1CT,OAAO,CAACQ,YAAY,CAAC;MACrBN,SAAS,CAACM,YAAY,CAACE,OAAO,CAAC,CAAC,CAAC;MACjCN,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEG,YAAY,CAACE,OAAO,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACtB;EACJ,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZY,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA;IAAAkB,QAAA,eACIlB,OAAA;MAAAkB,QAAA,EAAKhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEd,CAAC;AAAClB,EAAA,CA3BIH,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}