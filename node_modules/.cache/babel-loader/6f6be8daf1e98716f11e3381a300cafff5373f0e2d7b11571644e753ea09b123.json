{"ast":null,"code":"var _jsxFileName = \"/Users/jeromekithinji/Development/netflix-clone/src/Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https:image.tmdb.org/t/p/original/\";\nconst Row = ({\n  title,\n  fetchUrl,\n  isLargeRow\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(fetchUrl);\n      setMovies(response.data.results);\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // console.table(movies); //logs the console data in a table\n  console.log(movies);\n  useEffect(() => {\n    fetchData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","base_url","Row","title","fetchUrl","isLargeRow","_s","movies","setMovies","fetchData","response","get","data","results","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","poster_path","backdrop_path","alt","name","id","_c","$RefreshReg$"],"sources":["/Users/jeromekithinji/Development/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\n\nconst base_url = \"https:image.tmdb.org/t/p/original/\";\n\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\n    const [movies, setMovies] = useState([]);\n\n    const fetchData = async () => {\n        try {\n            const response = await axios.get(fetchUrl);\n            setMovies(response.data.results);\n            return response;\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    // console.table(movies); //logs the console data in a table\n    console.log(movies);\n\n    useEffect(() => {\n        fetchData();\n    }, [fetchUrl]);\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n            <div className=\"row__posters\">\n                {movies.map((movie) => (\n                    <img\n                        key={movie.id}\n                        className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                        src={`${base_url}${isLargeRow ?movie.poster_path: movie.backdrop_path}`}\n                        alt={movie.name}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Row;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,QAAQ,GAAG,oCAAoC;AAErD,MAAMC,GAAG,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACP,QAAQ,CAAC;MAC1CI,SAAS,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MAChC,OAAOH,QAAQ;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;;EAED;EACAC,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;EAEnBV,SAAS,CAAC,MAAM;IACZY,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,oBACIJ,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBlB,OAAA;MAAAkB,QAAA,EAAKf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBtB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBX,MAAM,CAACgB,GAAG,CAAEC,KAAK,iBACdxB,OAAA;QAEIiB,SAAS,EAAG,eAAcZ,UAAU,IAAI,kBAAmB,EAAE;QAC7DoB,GAAG,EAAG,GAAExB,QAAS,GAAEI,UAAU,GAAEmB,KAAK,CAACE,WAAW,GAAEF,KAAK,CAACG,aAAc,EAAE;QACxEC,GAAG,EAAEJ,KAAK,CAACK;MAAK,GAHXL,KAAK,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChB,EAAA,CAnCIJ,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}